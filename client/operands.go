// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "adder": operands Resource Client
//
// Command:
// $ goagen
// --design=github.com/yu-ichiko/goa-security-example/design
// --out=$(GOPATH)/src/github.com/yu-ichiko/goa-security-example
// --version=v1.3.1

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// GetOperandsPath computes a request path to the get action of operands.
func GetOperandsPath() string {

	return fmt.Sprintf("/")
}

// GetOperands makes a request to the get action endpoint of the operands resource
func (c *Client) GetOperands(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewGetOperandsRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewGetOperandsRequest create the request corresponding to the get action endpoint of the operands resource.
func (c *Client) NewGetOperandsRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	if c.BasicAuthSigner != nil {
		if err := c.BasicAuthSigner.Sign(req); err != nil {
			return nil, err
		}
	}
	return req, nil
}
